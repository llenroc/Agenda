<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    mc:Ignorable="d"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
                    xmlns:bellacode="http://schemas.bellacode.com/xaml"                    
                    xmlns:agenda="clr-namespace:BellaCodeAgenda"
                    xmlns:agenda_behaviors="clr-namespace:BellaCodeAgenda.Behaviors"
                    xmlns:agenda_converters="clr-namespace:BellaCodeAgenda.Converters"
                    xmlns:agenda_view_models="clr-namespace:BellaCodeAgenda.ViewModels">

    <bellacode:ObjectRefVisibilityConverter x:Key="CollapsedWhenNullConverter" WhenNotNull="Visible" WhenNull="Collapsed" />
    <agenda_converters:TimeSpanMinutesDisplayConverter x:Key="TimeSpanMinutesDisplayConverter" MinuteSuffix="min" MinutesSuffix="mins"  />


    <Style x:Key="Timer.View" TargetType="{x:Type Control}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <bellacode:ViewModelScope ViewModelType="{x:Type agenda_view_models:TimerViewModel}">
                        <Grid x:Name="TimerBackground" Background="#04CCCCCC" IsHitTestVisible="True">
                            <Grid.Resources>
                                <Storyboard x:Key="InteractiveFadeIn">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="TimerBackground">
                                        <EasingColorKeyFrame KeyTime="0:0:0.5" Value="Gray"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="InteractiveFadeOut">
                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="TimerBackground">                                        
                                        <EasingColorKeyFrame KeyTime="0:0:1" Value="#04CCCCCC"/>
                                    </ColorAnimationUsingKeyFrames>
                                </Storyboard>
                            </Grid.Resources>
                            <i:Interaction.Triggers>
                                <ei:PropertyChangedTrigger Binding="{Binding IsInteractive}">
                                    <i:Interaction.Behaviors>
                                        <ei:ConditionBehavior>
                                            <ei:ConditionalExpression>
                                                <ei:ComparisonCondition Operator="Equal" LeftOperand="{Binding IsInteractive}" RightOperand="true"/>
                                            </ei:ConditionalExpression>
                                        </ei:ConditionBehavior>
                                    </i:Interaction.Behaviors>
                                    <ei:ControlStoryboardAction Storyboard="{StaticResource InteractiveFadeIn}" ControlStoryboardOption="Play"/>
                                </ei:PropertyChangedTrigger>
                                <ei:PropertyChangedTrigger Binding="{Binding IsInteractive}">
                                    <i:Interaction.Behaviors>
                                        <ei:ConditionBehavior>
                                            <ei:ConditionalExpression>
                                                <ei:ComparisonCondition Operator="Equal" LeftOperand="{Binding IsInteractive}" RightOperand="false"/>
                                            </ei:ConditionalExpression>
                                        </ei:ConditionBehavior>
                                    </i:Interaction.Behaviors>
                                    <ei:ControlStoryboardAction Storyboard="{StaticResource InteractiveFadeOut}" ControlStoryboardOption="Play"/>
                                </ei:PropertyChangedTrigger>
                            </i:Interaction.Triggers>
                            <StackPanel IsHitTestVisible="True">
                                <i:Interaction.Behaviors>
                                    <agenda_behaviors:IsInteractiveBehavior IsInteractive="{Binding IsInteractive, Mode=OneWayToSource}" />
                                </i:Interaction.Behaviors>
                                <Border x:Name="TimerTitleBar" Background="{DynamicResource Agenda.CarbonBackground.}">
                                    <i:Interaction.Behaviors>
                                        <agenda_behaviors:MouseDragWindowBehavior />
                                    </i:Interaction.Behaviors>
                                    <Grid>
                                        <Border Background="#FF2C2C2C" SnapsToDevicePixels="True" IsHitTestVisible="False" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="Agenda" Foreground="White" FontSize="18px" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                            <Button x:Name="CloseButton" Style="{DynamicResource Agenda.CloseButton}" HorizontalAlignment="Right" Margin="2" Grid.Column="1">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Click">
                                                        <bellacode:CloseWindowAction/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </Button>
                                        </Grid>
                                    </Grid>
                                </Border>
                                <ProgressBar Value="{Binding PercentMeetingTimeUsed}" Style="{DynamicResource Agenda.ProgressBar}" MinWidth="100" Height="20" />
                                <ItemsControl ItemsSource="{Binding PastAgendaItems}" Margin="0,10,0,0">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Border Padding="4" Background="#10FFFFFF" Margin="4,2">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <CheckBox IsChecked="{Binding IsComplete, Mode=TwoWay}" Style="{DynamicResource Agenda.CheckBox}" Grid.Column="0"/>
                                                    <TextBlock Text="{Binding Name, Mode=OneWay}" Grid.Column="1" Foreground="Gray"/>
                                                    <TextBlock Text="{Binding Duration, Mode=OneWay, Converter={StaticResource TimeSpanMinutesDisplayConverter}}" Grid.Column="2" Foreground="Gray"/>
                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <!-- This is the current item -->
                                <Border TextBlock.Foreground="#FFE5E5E5" Padding="4" Margin="4,2" Visibility="{Binding CurrentAgendaItem, Mode=OneWay, Converter={StaticResource CollapsedWhenNullConverter}}">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Black" Offset="1"/>
                                            <GradientStop Color="#FF404040" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <CheckBox IsChecked="{Binding CurrentAgendaItem.IsComplete, Mode=TwoWay}" Style="{DynamicResource Agenda.CheckBox}" Grid.Column="0"/>
                                        <TextBlock Text="{Binding CurrentAgendaItem.Name, Mode=OneWay}" Grid.Column="1"/>
                                        <TextBlock Text="{Binding CurrentAgendaItem.Duration, Mode=OneWay, Converter={StaticResource TimeSpanMinutesDisplayConverter}}" Grid.Column="2"/>

                                    </Grid>
                                </Border>
                            </StackPanel>
                        </Grid>
                    </bellacode:ViewModelScope>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>