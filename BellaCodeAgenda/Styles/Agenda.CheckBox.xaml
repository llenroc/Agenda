<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="Agenda.CheckBox.FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" StrokeThickness="1" StrokeDashArray="1 2" Stroke="#FF000000"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Agenda.CheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource Agenda.CheckBox.FocusVisual}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="#FFD9D9D9"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledBorder">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Checkmark">
                                            <EasingColorKeyFrame KeyTime="0" Value="Gray"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="IndeterminateCheckmark">
                                            <EasingColorKeyFrame KeyTime="0" Value="Gray"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedGlyph">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateGlyph">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content -->
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid VerticalAlignment="Center">
                                    <Border x:Name="NormalBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FFD9D9D9" Background="White" Opacity="0" Width="12" Height="12"/>
                                    <Border x:Name="MouseOverBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FF666666" Background="White" Opacity="0" Width="12" Height="12"/>
                                    <Border x:Name="PressedBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Black" Opacity="0" Width="12" Height="12" Background="#FFFFDA99" />
                                    <Canvas x:Name="CheckedGlyph" Height="12" Width="12" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0">
                                        <Path x:Name="Checkmark" Data="M0.13634011,-0.27397954 L1.5,0 1.4227234,2.6687412 7.5776788,0.61274145 8.8883677,1.6803268 0.33926518,4.3537895 z" Fill="Black" Height="4.628" Canvas.Left="2.81" RenderTransformOrigin="0.090323397206819,0.437566746370586" Stretch="Fill" Stroke="{x:Null}" Canvas.Top="5.349" Width="8.751">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform Angle="-36"/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Canvas>
                                    <Canvas x:Name="IndeterminateGlyph" Height="12" Width="12" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0">
                                        <Rectangle Width="6" Height="1" Canvas.Left="3" Canvas.Top="6" Fill="Black" SnapsToDevicePixels="True" />
                                    </Canvas>
                                    <Border x:Name="DisabledBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Gray" Background="#7FD9D9D9" Opacity="0" Width="12" Height="12"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <Grid Margin="5,0,0,0">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                            </Grid>
                        </BulletDecorator>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>